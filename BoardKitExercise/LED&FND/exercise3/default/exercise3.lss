
exercise3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000030a  0000037e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000030a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .debug_aranges 00000020  00000000  00000000  0000039a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000034  00000000  00000000  000003ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000171  00000000  00000000  000003ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000f2  00000000  00000000  0000055f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000015c  00000000  00000000  00000651  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000020  00000000  00000000  000007b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d1  00000000  00000000  000007d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000050  00000000  00000000  000008a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000048  00000000  00000000  000008f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 46 00 	jmp	0x8c	; 0x8c <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  68:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  6c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  70:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  74:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  78:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  7c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  80:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  84:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  88:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ea e0       	ldi	r30, 0x0A	; 10
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 31       	cpi	r26, 0x1C	; 28
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0e 94 5f 00 	call	0xbe	; 0xbe <main>
  b6:	0c 94 83 01 	jmp	0x306	; 0x306 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <main>:

unsigned char fnd_sel[4] = {
	0x01,0x02,0x04,0x08
};

void main() {
  be:	df 92       	push	r13
  c0:	ef 92       	push	r14
  c2:	ff 92       	push	r15
  c4:	0f 93       	push	r16
  c6:	1f 93       	push	r17
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
	int i = 0;
	DDRA = 0xff; // LED output port
  cc:	8f ef       	ldi	r24, 0xFF	; 255
  ce:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xff; // FND output port
  d0:	84 bb       	out	0x14, r24	; 20
	DDRG = 0x0f; // FND output port
  d2:	8f e0       	ldi	r24, 0x0F	; 15
  d4:	80 93 64 00 	sts	0x0064, r24

	while(1) {
		unsigned char val = rand() % 0x08;
		PORTA = (1 << val);
  d8:	98 e0       	ldi	r25, 0x08	; 8
  da:	e9 2e       	mov	r14, r25
  dc:	f1 2c       	mov	r15, r1
  de:	01 e0       	ldi	r16, 0x01	; 1
  e0:	10 e0       	ldi	r17, 0x00	; 0
		PORTC = FND_DATA[8-val];
		PORTG = 0x0f;
  e2:	8f e0       	ldi	r24, 0x0F	; 15
  e4:	d8 2e       	mov	r13, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  e6:	c9 e1       	ldi	r28, 0x19	; 25
  e8:	d0 e0       	ldi	r29, 0x00	; 0
	DDRA = 0xff; // LED output port
	DDRC = 0xff; // FND output port
	DDRG = 0x0f; // FND output port

	while(1) {
		unsigned char val = rand() % 0x08;
  ea:	0e 94 17 01 	call	0x22e	; 0x22e <rand>
		PORTA = (1 << val);
  ee:	68 e0       	ldi	r22, 0x08	; 8
  f0:	70 e0       	ldi	r23, 0x00	; 0
  f2:	0e 94 95 00 	call	0x12a	; 0x12a <__divmodhi4>
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	98 01       	movw	r18, r16
  fa:	08 2e       	mov	r0, r24
  fc:	02 c0       	rjmp	.+4      	; 0x102 <main+0x44>
  fe:	22 0f       	add	r18, r18
 100:	33 1f       	adc	r19, r19
 102:	0a 94       	dec	r0
 104:	e2 f7       	brpl	.-8      	; 0xfe <main+0x40>
 106:	2b bb       	out	0x1b, r18	; 27
		PORTC = FND_DATA[8-val];
 108:	f7 01       	movw	r30, r14
 10a:	e8 1b       	sub	r30, r24
 10c:	f9 0b       	sbc	r31, r25
 10e:	e0 50       	subi	r30, 0x00	; 0
 110:	ff 4f       	sbci	r31, 0xFF	; 255
 112:	80 81       	ld	r24, Z
 114:	85 bb       	out	0x15, r24	; 21
		PORTG = 0x0f;
 116:	d0 92 65 00 	sts	0x0065, r13
 11a:	80 e5       	ldi	r24, 0x50	; 80
 11c:	93 ec       	ldi	r25, 0xC3	; 195
 11e:	fe 01       	movw	r30, r28
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <main+0x62>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 124:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 126:	d9 f7       	brne	.-10     	; 0x11e <main+0x60>
 128:	e0 cf       	rjmp	.-64     	; 0xea <main+0x2c>

0000012a <__divmodhi4>:
 12a:	97 fb       	bst	r25, 7
 12c:	09 2e       	mov	r0, r25
 12e:	07 26       	eor	r0, r23
 130:	0a d0       	rcall	.+20     	; 0x146 <__divmodhi4_neg1>
 132:	77 fd       	sbrc	r23, 7
 134:	04 d0       	rcall	.+8      	; 0x13e <__divmodhi4_neg2>
 136:	0c d0       	rcall	.+24     	; 0x150 <__udivmodhi4>
 138:	06 d0       	rcall	.+12     	; 0x146 <__divmodhi4_neg1>
 13a:	00 20       	and	r0, r0
 13c:	1a f4       	brpl	.+6      	; 0x144 <__divmodhi4_exit>

0000013e <__divmodhi4_neg2>:
 13e:	70 95       	com	r23
 140:	61 95       	neg	r22
 142:	7f 4f       	sbci	r23, 0xFF	; 255

00000144 <__divmodhi4_exit>:
 144:	08 95       	ret

00000146 <__divmodhi4_neg1>:
 146:	f6 f7       	brtc	.-4      	; 0x144 <__divmodhi4_exit>
 148:	90 95       	com	r25
 14a:	81 95       	neg	r24
 14c:	9f 4f       	sbci	r25, 0xFF	; 255
 14e:	08 95       	ret

00000150 <__udivmodhi4>:
 150:	aa 1b       	sub	r26, r26
 152:	bb 1b       	sub	r27, r27
 154:	51 e1       	ldi	r21, 0x11	; 17
 156:	07 c0       	rjmp	.+14     	; 0x166 <__udivmodhi4_ep>

00000158 <__udivmodhi4_loop>:
 158:	aa 1f       	adc	r26, r26
 15a:	bb 1f       	adc	r27, r27
 15c:	a6 17       	cp	r26, r22
 15e:	b7 07       	cpc	r27, r23
 160:	10 f0       	brcs	.+4      	; 0x166 <__udivmodhi4_ep>
 162:	a6 1b       	sub	r26, r22
 164:	b7 0b       	sbc	r27, r23

00000166 <__udivmodhi4_ep>:
 166:	88 1f       	adc	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	5a 95       	dec	r21
 16c:	a9 f7       	brne	.-22     	; 0x158 <__udivmodhi4_loop>
 16e:	80 95       	com	r24
 170:	90 95       	com	r25
 172:	bc 01       	movw	r22, r24
 174:	cd 01       	movw	r24, r26
 176:	08 95       	ret

00000178 <do_rand>:
 178:	af 92       	push	r10
 17a:	bf 92       	push	r11
 17c:	cf 92       	push	r12
 17e:	df 92       	push	r13
 180:	ef 92       	push	r14
 182:	ff 92       	push	r15
 184:	0f 93       	push	r16
 186:	1f 93       	push	r17
 188:	cf 93       	push	r28
 18a:	df 93       	push	r29
 18c:	ec 01       	movw	r28, r24
 18e:	a8 80       	ld	r10, Y
 190:	b9 80       	ldd	r11, Y+1	; 0x01
 192:	ca 80       	ldd	r12, Y+2	; 0x02
 194:	db 80       	ldd	r13, Y+3	; 0x03
 196:	a1 14       	cp	r10, r1
 198:	b1 04       	cpc	r11, r1
 19a:	c1 04       	cpc	r12, r1
 19c:	d1 04       	cpc	r13, r1
 19e:	41 f4       	brne	.+16     	; 0x1b0 <do_rand+0x38>
 1a0:	84 e2       	ldi	r24, 0x24	; 36
 1a2:	a8 2e       	mov	r10, r24
 1a4:	89 ed       	ldi	r24, 0xD9	; 217
 1a6:	b8 2e       	mov	r11, r24
 1a8:	8b e5       	ldi	r24, 0x5B	; 91
 1aa:	c8 2e       	mov	r12, r24
 1ac:	87 e0       	ldi	r24, 0x07	; 7
 1ae:	d8 2e       	mov	r13, r24
 1b0:	c6 01       	movw	r24, r12
 1b2:	b5 01       	movw	r22, r10
 1b4:	2d e1       	ldi	r18, 0x1D	; 29
 1b6:	33 ef       	ldi	r19, 0xF3	; 243
 1b8:	41 e0       	ldi	r20, 0x01	; 1
 1ba:	50 e0       	ldi	r21, 0x00	; 0
 1bc:	0e 94 46 01 	call	0x28c	; 0x28c <__divmodsi4>
 1c0:	27 ea       	ldi	r18, 0xA7	; 167
 1c2:	31 e4       	ldi	r19, 0x41	; 65
 1c4:	40 e0       	ldi	r20, 0x00	; 0
 1c6:	50 e0       	ldi	r21, 0x00	; 0
 1c8:	0e 94 27 01 	call	0x24e	; 0x24e <__mulsi3>
 1cc:	7b 01       	movw	r14, r22
 1ce:	8c 01       	movw	r16, r24
 1d0:	c6 01       	movw	r24, r12
 1d2:	b5 01       	movw	r22, r10
 1d4:	2d e1       	ldi	r18, 0x1D	; 29
 1d6:	33 ef       	ldi	r19, 0xF3	; 243
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	0e 94 46 01 	call	0x28c	; 0x28c <__divmodsi4>
 1e0:	ca 01       	movw	r24, r20
 1e2:	b9 01       	movw	r22, r18
 1e4:	2c ee       	ldi	r18, 0xEC	; 236
 1e6:	34 ef       	ldi	r19, 0xF4	; 244
 1e8:	4f ef       	ldi	r20, 0xFF	; 255
 1ea:	5f ef       	ldi	r21, 0xFF	; 255
 1ec:	0e 94 27 01 	call	0x24e	; 0x24e <__mulsi3>
 1f0:	6e 0d       	add	r22, r14
 1f2:	7f 1d       	adc	r23, r15
 1f4:	80 1f       	adc	r24, r16
 1f6:	91 1f       	adc	r25, r17
 1f8:	97 ff       	sbrs	r25, 7
 1fa:	04 c0       	rjmp	.+8      	; 0x204 <do_rand+0x8c>
 1fc:	61 50       	subi	r22, 0x01	; 1
 1fe:	70 40       	sbci	r23, 0x00	; 0
 200:	80 40       	sbci	r24, 0x00	; 0
 202:	90 48       	sbci	r25, 0x80	; 128
 204:	68 83       	st	Y, r22
 206:	79 83       	std	Y+1, r23	; 0x01
 208:	8a 83       	std	Y+2, r24	; 0x02
 20a:	9b 83       	std	Y+3, r25	; 0x03
 20c:	9b 01       	movw	r18, r22
 20e:	3f 77       	andi	r19, 0x7F	; 127
 210:	c9 01       	movw	r24, r18
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	ff 90       	pop	r15
 21c:	ef 90       	pop	r14
 21e:	df 90       	pop	r13
 220:	cf 90       	pop	r12
 222:	bf 90       	pop	r11
 224:	af 90       	pop	r10
 226:	08 95       	ret

00000228 <rand_r>:
 228:	0e 94 bc 00 	call	0x178	; 0x178 <do_rand>
 22c:	08 95       	ret

0000022e <rand>:
 22e:	87 e1       	ldi	r24, 0x17	; 23
 230:	91 e0       	ldi	r25, 0x01	; 1
 232:	0e 94 bc 00 	call	0x178	; 0x178 <do_rand>
 236:	08 95       	ret

00000238 <srand>:
 238:	a0 e0       	ldi	r26, 0x00	; 0
 23a:	b0 e0       	ldi	r27, 0x00	; 0
 23c:	80 93 17 01 	sts	0x0117, r24
 240:	90 93 18 01 	sts	0x0118, r25
 244:	a0 93 19 01 	sts	0x0119, r26
 248:	b0 93 1a 01 	sts	0x011A, r27
 24c:	08 95       	ret

0000024e <__mulsi3>:
 24e:	62 9f       	mul	r22, r18
 250:	d0 01       	movw	r26, r0
 252:	73 9f       	mul	r23, r19
 254:	f0 01       	movw	r30, r0
 256:	82 9f       	mul	r24, r18
 258:	e0 0d       	add	r30, r0
 25a:	f1 1d       	adc	r31, r1
 25c:	64 9f       	mul	r22, r20
 25e:	e0 0d       	add	r30, r0
 260:	f1 1d       	adc	r31, r1
 262:	92 9f       	mul	r25, r18
 264:	f0 0d       	add	r31, r0
 266:	83 9f       	mul	r24, r19
 268:	f0 0d       	add	r31, r0
 26a:	74 9f       	mul	r23, r20
 26c:	f0 0d       	add	r31, r0
 26e:	65 9f       	mul	r22, r21
 270:	f0 0d       	add	r31, r0
 272:	99 27       	eor	r25, r25
 274:	72 9f       	mul	r23, r18
 276:	b0 0d       	add	r27, r0
 278:	e1 1d       	adc	r30, r1
 27a:	f9 1f       	adc	r31, r25
 27c:	63 9f       	mul	r22, r19
 27e:	b0 0d       	add	r27, r0
 280:	e1 1d       	adc	r30, r1
 282:	f9 1f       	adc	r31, r25
 284:	bd 01       	movw	r22, r26
 286:	cf 01       	movw	r24, r30
 288:	11 24       	eor	r1, r1
 28a:	08 95       	ret

0000028c <__divmodsi4>:
 28c:	97 fb       	bst	r25, 7
 28e:	09 2e       	mov	r0, r25
 290:	05 26       	eor	r0, r21
 292:	0e d0       	rcall	.+28     	; 0x2b0 <__divmodsi4_neg1>
 294:	57 fd       	sbrc	r21, 7
 296:	04 d0       	rcall	.+8      	; 0x2a0 <__divmodsi4_neg2>
 298:	14 d0       	rcall	.+40     	; 0x2c2 <__udivmodsi4>
 29a:	0a d0       	rcall	.+20     	; 0x2b0 <__divmodsi4_neg1>
 29c:	00 1c       	adc	r0, r0
 29e:	38 f4       	brcc	.+14     	; 0x2ae <__divmodsi4_exit>

000002a0 <__divmodsi4_neg2>:
 2a0:	50 95       	com	r21
 2a2:	40 95       	com	r20
 2a4:	30 95       	com	r19
 2a6:	21 95       	neg	r18
 2a8:	3f 4f       	sbci	r19, 0xFF	; 255
 2aa:	4f 4f       	sbci	r20, 0xFF	; 255
 2ac:	5f 4f       	sbci	r21, 0xFF	; 255

000002ae <__divmodsi4_exit>:
 2ae:	08 95       	ret

000002b0 <__divmodsi4_neg1>:
 2b0:	f6 f7       	brtc	.-4      	; 0x2ae <__divmodsi4_exit>
 2b2:	90 95       	com	r25
 2b4:	80 95       	com	r24
 2b6:	70 95       	com	r23
 2b8:	61 95       	neg	r22
 2ba:	7f 4f       	sbci	r23, 0xFF	; 255
 2bc:	8f 4f       	sbci	r24, 0xFF	; 255
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	08 95       	ret

000002c2 <__udivmodsi4>:
 2c2:	a1 e2       	ldi	r26, 0x21	; 33
 2c4:	1a 2e       	mov	r1, r26
 2c6:	aa 1b       	sub	r26, r26
 2c8:	bb 1b       	sub	r27, r27
 2ca:	fd 01       	movw	r30, r26
 2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <__udivmodsi4_ep>

000002ce <__udivmodsi4_loop>:
 2ce:	aa 1f       	adc	r26, r26
 2d0:	bb 1f       	adc	r27, r27
 2d2:	ee 1f       	adc	r30, r30
 2d4:	ff 1f       	adc	r31, r31
 2d6:	a2 17       	cp	r26, r18
 2d8:	b3 07       	cpc	r27, r19
 2da:	e4 07       	cpc	r30, r20
 2dc:	f5 07       	cpc	r31, r21
 2de:	20 f0       	brcs	.+8      	; 0x2e8 <__udivmodsi4_ep>
 2e0:	a2 1b       	sub	r26, r18
 2e2:	b3 0b       	sbc	r27, r19
 2e4:	e4 0b       	sbc	r30, r20
 2e6:	f5 0b       	sbc	r31, r21

000002e8 <__udivmodsi4_ep>:
 2e8:	66 1f       	adc	r22, r22
 2ea:	77 1f       	adc	r23, r23
 2ec:	88 1f       	adc	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	1a 94       	dec	r1
 2f2:	69 f7       	brne	.-38     	; 0x2ce <__udivmodsi4_loop>
 2f4:	60 95       	com	r22
 2f6:	70 95       	com	r23
 2f8:	80 95       	com	r24
 2fa:	90 95       	com	r25
 2fc:	9b 01       	movw	r18, r22
 2fe:	ac 01       	movw	r20, r24
 300:	bd 01       	movw	r22, r26
 302:	cf 01       	movw	r24, r30
 304:	08 95       	ret

00000306 <_exit>:
 306:	f8 94       	cli

00000308 <__stop_program>:
 308:	ff cf       	rjmp	.-2      	; 0x308 <__stop_program>
